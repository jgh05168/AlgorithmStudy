/*
사과나무 씨앗 초기 높이 = 0
물뿌리개 2개 
	- 하나는 나무 하나를 1씩 성장
	- 다른 하나는 2씩 성장
	- 동시에 사용해야 하며, 나무가 없는 토양에는 사용 불가
	- 두 물뿌리개를 하나의 토양에 사용할 수 있음

물뿌리개로 높이를 만들 수 있는지 체크해보기

풀이:
물뿌리개를 동시에 뿌리므로 전체 나무 높이가 3의 배수로 떨어져야지 가능하다.
3의 배수 중에서도 안되는 경우가 존재(1 1 1 3 3 3)
- 1의 idx와 나머지값의 idx에 대해서 저장해놓고 while문으로 줄여나가기
------------ 이건 그리디가 아니다 !!!!!!!!!!!!!!!!!! -------------
풀이 참고
- 1과 2가 무조건 동시에 사용되어야 한다. 
=> 전체 수열의 합이 3의 배수여야 하고, 
=> (전체 수열의 합 / 3) = 물뿌리개를 사용해야 하는 횟수 = 2를 사용해야 하는 횟수 를 충족해야 한다.

따라서 1 ~ N 사과나무들의 2로 나눈 몫의 합이 위 식의 이상이여야 한다.

다시 정리하자면, 결국 3의 배수이면서 2의 갯수가 물뿌리는 토탈 횟수보다 많으면 된다.

---------------------------
이게 왜 그리디인가 ???
1번 물 뿌리는거  따로, 2번 물 뿌리는거 따로 생각해준다.
2번을 무조건적으로 뿌려야만 크기를 맞출 수 있다는 증거가 된다.
2를 뿌리는 횟수만 전체 물뿌리는 횟수보다 많거나 같으면 조건이 충족되기 때문
*/

#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int n;

int main() {
	cin >> n;
	
	int cur_v;
	int sum = 0;
	int cnt = 0;
	for (int i = 0; i < n; i++) {
		cin >> cur_v;
		sum += cur_v;
		cnt += cur_v / 2;
	}

	if (sum % 3 || sum / 3 > cnt) cout << "NO" << '\n';
	else cout << "YES" << '\n';


	return 0;
}